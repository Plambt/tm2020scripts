/**
 *
 * Stunts for TrackMania 2020
 *
 * written by dassschaf / UD Timmy
 *
 */


/**
 *	Interesting Information for stunt mode: 
 *	* CSmPlayer class
 *	see: https://maniascript.boss-bravo.fr/class_c_sm_player.html
 *	* CSmPlayer->InputSteer
 *	* CSmPlayer->WheelsContactGround
 *  * CSmPlayer->FlyingDistance
 *  * CSmPlayer->Upwardness???
 *  * CSmPlayer->AimDirection
 *  * CSmPlayer->Velocity
 *
 *  * CSmPlayer->Vehicle (Type: CModeVehicle)
 *	see: https://maniascript.boss-bravo.fr/class_c_mode_vehicle.html
 */

// Extends base mode script of TM 2020:
#Extends "Libs/Nadeo/TMNext/TrackMania/Modes/TMNextBase.Script.txt"

// ---------------------------------- //
// Script Info
#Const	CompatibleMapTypes	"TrackMania\\TM_Race,TM_Race"
#Const  Version     		"0"
#Const  ScriptName  		"Stunts2020.Script.txt"
#Const  C_ModeName          "Stunts2020"
#Const  Description         _("In $<$6f9Stunt mode$>, the goal is to make as much points by tricks in the air as possible before the time is over. Finishing too late and respawning cause point deduction. The winner is the player with the highest score. \n This mode is inspired by the original Stunt mode known from TM 1 or Spaii's stunts titlepack for TM 2.")

// ---------------------------------- //
// Libraries

#Include "MathLib" as MathLib
#Include "TextLib" as TextLib

#Include "Libs/Nadeo/Interface.Script.txt" as Interface

// ---------------------------------- //
// Settings
// #Setting S_NAME VALUE as _("TEXT")

#Setting S_TimeLimit 300 as _("Time Limit:") ///< as ... for server setup

// ---------------------------------- //
// Constants
// #Const C_NAME VALUE


// ---------------------------------- //
// Extends

/// LogVersion
***Match_LogVersion***
***
    Log::RegisterScript(ScriptName, Version);
***

***Match_Rules***
***
    // define Game Mode information:
    ModeInfo::SetName(C_ModeName);
    ModeInfo::SetType(ModeInfo::C_Type_FreeForAll);
    ModeInfo::SetRules(Description);
    ModeInfo::SetStatusMessage(_("TYPE: Free for all\nOBJECTIVE: Set the best score on the track."));
***

/// on Server start
***Match_StartServer***
***
    // Initialize Gamemode
    RespawnBehaviour::Set(CSmMode::ERespawnBehaviour::AlwaysRespawn); ///< allow respawn even in start
***

/// on Map Start
***Match_InitMap***
***
    // Map initialization
    yield;
***

***Match_StartMap***
***
    // Map actual start
    yield;
***

/// on Turn Start
***Match_InitTurn***
***
    // Turn initialitzation
    yield;
***

***Match_StartTurn***
***
    // Turn start
    ModeStatusMessage = "Current map : "^Map.MapInfo.Name;
***

/// Play loop
***Match_PlayLoop***
***
    // actual game mechanics?!
    foreach (Player in Players) {
        
    }

***


// ---------------------------------- //
// Own functions

